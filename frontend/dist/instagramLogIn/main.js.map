{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/log-in.service.ts","./src/app/app-routing.module.ts","./src/app/insta-log-in/insta-log-in.component.ts","./src/app/insta-log-in/insta-log-in.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'instagramLogIn';\n}\n","\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { InstaLogInComponent } from './insta-log-in/insta-log-in.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InstaLogInComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogInService {\n\n  constructor(private http : HttpClient) { }\n\n  logInData(data : any) {\n    return this.http.post(\"signIn\", data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { InstaLogInComponent } from './insta-log-in/insta-log-in.component';\n\nconst routes: Routes = [\n  { path : \"\", component : InstaLogInComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { LogInService } from '../log-in.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-insta-log-in',\n  templateUrl: './insta-log-in.component.html',\n  styleUrls: ['./insta-log-in.component.css']\n})\nexport class InstaLogInComponent implements OnInit {\n\n  constructor(private logInService : LogInService) { }\n\n  ngOnInit(): void {\n  }\n\n  logInData : any = {\n    userName : \"\",\n    password : \"\"\n  }\n  onSubmit() {\n    this.logInService.logInData(this.logInData).subscribe((data : any) => {\n      if(data.success) {\n        Swal.fire(\"Procreate\", data.message, 'success');\n      }\n    })\n  }\n}\n","\n<body>\n    <div id=\"wrapper\">\n      <div class=\"container\">\n        <div class=\"phone-app-demo\"></div>\n        <div class=\"form-data\">\n          <form>\n            <div class=\"logo\">\n              <h1>Instagram.</h1>\n            </div>\n            <input type=\"text\" placeholder=\"Phone number, username, or email\" [(ngModel)] = \"logInData.userName\" name=\"userName\">\n            <input type=\"password\" placeholder=\"Password\" [(ngModel)] = \"logInData.password\" name=\"password\">\n            <button class=\"form-btn\" type=\"submit\" (click) = \"onSubmit()\">Log in</button>\n            <span class=\"has-separator\">Or</span>\n            <a href=\"#\" class=\"facebook-login\">\n              <i class=\"fab fa-facebook\"></i> Log in with Facebook\n            </a>\n            <a class=\"password-reset\" href=\"#\">Forgot password?</a>\n          </form>\n          <div class=\"sign-up\">\n            Don't an account? <a href=\"#\">Sign up</a>\n          </div>\n          <div class=\"get-the-app\">\n            <span>\n                <img src=\"../../assets/procreate-icon-search-display.png\" alt=\"\" style=\"height: 40px; width: 40px;\">\n                By Procreate And Company\n            </span>\n            <div class=\"badge\">\n              <img src=\"../../assets/procreate-icon-search-display.png\" alt=\"android App\" style=\"height: 70px; width: 70px;\">\n              <img src=\"https://www.instagram.com/static/images/appstore-install-badges/badge_ios_english-en.png/180ae7a0bcf7.png\" alt=\"ios app\">\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <footer>\n        <div class=\"container\">\n          <nav class=\"footer-nav\">\n            <ul>\n              <li><a href=\"#\">About Us</a></li>\n              <li><a href=\"#\">Support</a></li>\n              <li><a href=\"#\">Jobs</a></li>\n              <li><a href=\"#\">Privacy</a></li>\n              <li><a href=\"#\">Terms</a></li>\n              <li><a href=\"#\">Profiles</a></li>\n              <li><a href=\"#\">Languages</a></li>\n            </ul>\n          </nav>\n          <div class=\"copyright-notice\">\n            &copy; 2021 Complaints\n          </div>\n        </div>\n      </footer>\n    </div>\n</body>\n<!-- </html> -->","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}